{"version":3,"sources":["Pokeball.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","isLoaded","items","url","collectedPokemon","detailClicked","pokemon","sequence","_this2","fetch","then","res","json","result","setState","react_default","a","createElement","react_router","path","component","PokemonDetails","name","chance","Math","floor","random","myPokemon","ownedTotal","length","promptResult","prompt","concat","splice","pokemonName","nickname","id","alert","ownedPokemon","findIndex","list","_this3","className","map","key","onClick","removePokemon","type","_this4","_this$state","message","react_router_dom","Navbar_default","sticky","bg","expand","variant","Container_default","Brand","href","src","logo","width","height","alt","Toggle","aria-controls","Collapse","Nav_default","hideCatchButton","to","results","item","setCurrentPokemon","exact","render","catchPokemon","renderPokemonList","React","Component","_this5","_this6","match","params","prevProps","_this7","_this$state2","sprites","front_default","species","substring","toUpperCase","types","moves","move","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dddf0aeb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Pokeball.dff32475.png\";","import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport logo from './Pokeball.png';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Container from 'react-bootstrap/Container'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,      \n      items: [],                         // Store a list of all pokemons\n      url: \"https://pokeapi.co/api/v2/\", // API endpoint\n      collectedPokemon: [],              // Store catched pokemon in an array of objects\n      detailClicked: false,              // Used to determine whether to display catch button when pokemon is clicked\n      pokemon: \"\",                       // Store currently viewed pokemon\n      sequence: 0                        // For ID-ing catched pokemons\n    };\n  }\n\n  // Do an AJAX call fetching a list of all pokemons\n  componentDidMount() {\n    fetch(this.state.url + \"pokemon/?offset=0&limit=1000\") //Offset tells us how many to exclude from the beginning of the result\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  renderPokemonDetails() {\n    return(\n      <Route path=\"/PokemonDetails/:name\" component={PokemonDetails} />\n    )\n  }\n\n  setCurrentPokemon(name) {    \n    this.setState(\n      {\n        detailClicked: true,\n        pokemon: name,\n      }\n    );\n  }\n\n  hideCatchButton() {\n    this.setState({detailClicked: false})\n  }\n\n  catchPokemon(name) {\n    let chance = Math.floor(Math.random() * 2); //generates either 0 or 1\n    let myPokemon = this.state.collectedPokemon;\n    if (chance === 1) {\n      this.setState({ownedTotal: this.state.collectedPokemon.length})\n      let promptResult = prompt(`You have successfully caught a ${name}! Name your new pokemon` );\n            \n      // Add pokemon to pokemon collection\n      myPokemon.splice(myPokemon.length, 0, {pokemonName: name, nickname: promptResult, id: this.state.sequence})\n      this.setState({collectedPokemon: myPokemon})\n      this.setState({sequence: this.state.sequence + 1})\n      \n    } else {\n      alert(`Catch failed. Try again!`)\n    }\n  }\n\n  removePokemon(nickname, id) {\n    let ownedPokemon = this.state.collectedPokemon;\n    ownedPokemon.splice(ownedPokemon.findIndex(pokemon => pokemon.nickname === nickname && pokemon.id === id), 1);\n    this.setState({collectedPokemon: ownedPokemon})\n  }\n\n  renderPokemonList(list) {\n    return (\n      <div className=\"col-md-8 text-center\">\n      <h1>My Pok&eacute;mon List</h1>\n      {list.length === 0 && <h3>You haven't caught any pok&eacute;mon</h3>}\n      <table className=\"table\">\n        {list.length !== 0 &&\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Nickname</th>\n            <th>Release?</th>\n          </tr>\n        </thead>}\n        <tbody>\n        {list.map(pokemon => (\n          <tr key={pokemon.id}>\n            <td>{pokemon.pokemonName}</td>\n            <td>{pokemon.nickname}</td>\n            <td>\n              <button id={pokemon.id} onClick={() => this.removePokemon(pokemon.nickname, pokemon.id)} \n                      type=\"button\" \n                      className=\"btn btn-danger\">\n                      Release Pokemon\n              </button>\n            </td>\n          </tr>\n        ))}\n        </tbody>\n      </table>\n    </div>\n    )\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div>\n          <Router>\n            <Navbar sticky=\"top\" bg=\"dark\" expand=\"lg\" variant=\"dark\">\n              <Container>\n              <Navbar.Brand href=\"/my-pokemon\"><img src={logo} width=\"30\" height=\"30\" alt=\"logo\"/> My Pok&eacute;mon API</Navbar.Brand>\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n              <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                  <Link className=\"nav-link\" onClick={() => this.hideCatchButton()} to={\"/my-pokemon\"}>Pok&eacute;mon List</Link>\n                  <Link className=\"nav-link\" onClick={() => this.hideCatchButton()} to={\"/my-pokemon/MyPokemonList\"}>My Pok&eacute;mon List</Link>\n                </Nav>\n              </Navbar.Collapse>\n              </Container>\n            </Navbar>\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-4 pokemonList\">\n                <h1>Pok&eacute;mon Master List</h1>\n                <ul>\n                  {items.results.map(item => (\n                    <li key={item.url}>\n                      <Link onClick={() => this.setCurrentPokemon(item.name)} to={\"/my-pokemon/PokemonDetails/\" + item.name}>{item.name}</Link>\n                    </li>\n                  ))}\n                </ul>\n                <h3>Owned a total of: {this.state.collectedPokemon.length} pok&eacute;mons</h3>\n                </div>\n                <Route exact path=\"/my-pokemon\" render={() => <div className=\"col-md-8 text-center\"><h1>Welcome</h1></div>} />\n                {this.state.detailClicked === true &&\n                <div className=\"col-md-8 text-center\">\n                  <div className=\"row\">\n                  <Route path=\"/my-pokemon/PokemonDetails/:name\" component={PokemonDetails} />\n                  <div className=\"col-md-4 col-sm-6\">\n                  <button className=\"btn btnPrimary btnCatch\" onClick={() => this.catchPokemon(this.state.pokemon)}><img width=\"100%\" src={logo} alt=\"catchButton\"></img></button>\n                  </div>\n                  </div>\n                </div>}\n                <Route path=\"/my-pokemon/MyPokemonList\" render={() => this.renderPokemonList(this.state.collectedPokemon)} />\n              </div>\n            </div>\n          </Router>\n        </div>\n      );\n    }\n  }\n}\n\nclass PokemonDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: {},\n      url: \"https://pokeapi.co/api/v2/\",\n      pokemon: \"\"\n    };\n  }\n\n  // Initial load\n  componentDidMount() {\n    const { match } = this.props;\n    this.setState({pokemon: match.params.name});\n    fetch(this.state.url + \"pokemon/\" + match.params.name)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  // Fetch data whenever another pokemon from the list is clicked\n  componentDidUpdate(prevProps) {\n    const { match } = this.props;\n    if(this.props.match !== prevProps.match){\n    this.setState({pokemon: match.params.name});\n    fetch(this.state.url + \"pokemon/\" + match.params.name)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n    }\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div className=\"col-md-8 col-sm-6\">\n          <div className=\"pokemonDetail\">\n            <h2>Pok&eacute;mon Details for {this.state.pokemon}</h2>\n            <img src={items.sprites.front_default} alt=\"sprite\" className=\"pokemonSprite\"></img>\n            <h3>Name: {items.species.name.substring(0,1).toUpperCase() + items.species.name.substring(1)}</h3>\n            <div className=\"pokemonTypeList\">\n              <h3>Types: </h3>\n              <ul>\n                {items.types.map(type => (\n                  <li key={type.type.url}>{type.type.name}</li>\n                ))}\n              </ul>\n            </div>\n            <div className=\"pokemonMoveList\">\n              <h3>Moves: </h3>\n              <ul>\n                {items.moves.map(move => (\n                  <li key={move.move.url}>{move.move.name}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }  \n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}